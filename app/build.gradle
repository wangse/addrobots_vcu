apply plugin: 'com.android.application'
//apply plugin: 'com.google.protobuf'

//model {
android {
	compileSdkVersion = 24
	buildToolsVersion = '24.0.1'

	defaultConfig {
		applicationId = "com.addrobots.vehiclecontrol"
		minSdkVersion 21
		targetSdkVersion 24
		versionCode = 1
		versionName = "1.0"
		multiDexEnabled = true

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//		ndk {
//			abiFilters "arm64-v8a", "armeabi-v7a", "x86_64"
//		}
//		externalNativeBuild {
//			cmake {
//				arguments "-DANDROID_TOOLCHAIN=gcc", "-DANDROID_STL=gnustl_static", "-DANDROID_NATIVE_API_LEVEL=21", "-DANDROID_STL_FORCE_FEATURES=ON", "-DWITH_OPENCL=OFF", "-DWITH_CUDA=OFF", "-DWITH_IPP=OFF", "-DBUILD_EXAMPLES=OFF", "-DBUILD_TESTS=OFF", "-DBUILD_PERF_TESTS=OFF", "-DBUILD_DOCS=OFF", "-DBUILD_ANDROID_EXAMPLES=OFF", "-DINSTALL_ANDROID_EXAMPLES=OFF"
//				cFlags "-v", "-O0", "-g", "-DDEBUG", "-D_DEBUG"
//				cppFlags "-v", "-O0", "-g", "-DDEBUG", "-D_DEBUG"
//				abiFilters "arm64-v8a", "armeabi-v7a", "x86_64"
//			}
//		}
	}
//	sourceSets {
//		main {
//			// let gradle pack the shared library into apk
//			jniLibs {
//				srcDirs = ["./build/intermediates/cmake/debug/lib"]
//			}
//		}
//	}
	buildTypes {
		debug {
			debuggable true
			jniDebuggable true
		}
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
//	externalNativeBuild {
//		cmake {
//			path "../../opencv/CMakeLists.txt"
//		}
//	}
}
android.lintOptions {
	lintConfig file("lint.xml")
}
android.testOptions {
	unitTests.returnDefaultValues = true
}
//}

//repositories {
//	libs(PrebuiltLibraries) {
//		// Configure one pre-built lib: shared
//		opencv_java3 {
//			// Inform Android Studio where header file dir for this lib
//			headers.srcDir "../opencv/modules/videoio/src"
//			headers.srcDir "../opencv/modules/videoio/include"
////			headers.include "opencv2/**/*.hpp"
////			headers.include "opencv2/videoio.hpp"
//			// Inform Android Studio where lib is -- each ABI should have a lib file
//			binaries.withType(SharedLibraryBinary) {
//				sharedLibraryFile = file("app/build/intermediates/cmake/debug/lib/${targetPlatform.getName()}/libopencv_java3.so")
//			}
//		}
//	}
//}

dependencies {
	compile 'com.android.support:appcompat-v7:24.1.1'

	// Unit testing
	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-core:1.10.19'
	testCompile 'org.robolectric:robolectric:2.4'
	androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
	androidTestCompile 'com.android.support.test:runner:0.5'
	androidTestCompile 'com.android.support.test:rules:0.5'

	// These two are transitive rules to force the right libraries for testing to match the app.
	androidTestCompile 'com.android.support:support-annotations:24.1.1'
	androidTestCompile 'com.google.code.findbugs:jsr305:3.0.0'

	// Firebase
	compile 'com.google.firebase:firebase-messaging:9.4.0'
	compile 'com.google.firebase:firebase-auth:9.4.0'
	compile 'com.google.android.gms:play-services:9.4.0'
	compile 'com.google.firebase:firebase-crash:9.4.0'
	compile 'com.google.gms:google-services:3.0.0'

	// Protobuf
	//	compile 'com.google.protobuf.nano:protobuf-javanano:3.0.0-alpha-3'
	compile 'com.google.protobuf:protobuf-java:3.0.0-beta-3'
	//	protobuf files('libs/protos.jar')

	// GRPC
	compile 'io.grpc:grpc-core:0.9.0'
	compile 'io.grpc:grpc-okhttp:0.9.0'
	compile 'io.grpc:grpc-stub:0.9.0'
	compile 'io.grpc:grpc-protobuf-nano:0.9.0'

	// OpenCV
	releaseCompile project(path: ':openCVLibrary310', configuration: 'release')
	debugCompile project(path: ':openCVLibrary310', configuration: 'debug')
	//compile project(':openCVLibrary310')
	compile project(':ffmpeg')

	// Libs
	compile fileTree(dir: 'lib', include: ['*.jar', '*.so', '*.a'])
}

//protobuf {
//	// Configure the protoc executable
//	protoc {
//		// Download from repositories
//		artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'
//	}
//	plugins {
//		grpc {
//			artifact = 'io.grpc:protoc-gen-grpc-java:0.7.0'
//		}
//	}
//	generateProtoTasks {
//		all()*.builtins {
//			javanano {
//				// Options added to --javanano_out
//				option 'java_multiple_files=false'
//				option 'ignore_services=true'
//			}
//		}
//		ofNonTest()*.plugins {
//			grpc {
//				// Options added to --grpc_out
//				option 'nano=true'
//			}
//		}
//	}
//}

apply plugin: 'com.google.gms.google-services'
