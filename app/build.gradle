apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:2.1.0'
		classpath 'com.google.protobuf:protobuf-gradle-plugin:0.7.7'
	}
}

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')
	testCompile 'junit:junit:4.12'
	compile 'com.android.support:appcompat-v7:23.3.0'
	//compile files('libs/usb-serial-for-android-v010.jar')
	compile 'com.google.protobuf.nano:protobuf-javanano:3.0.0-alpha-3'
	compile "com.google.protobuf:protobuf-java:2.6.1"
	compile 'io.grpc:grpc-core:0.7.0'
	compile 'io.grpc:grpc-okhttp:0.7.0'
	compile 'io.grpc:grpc-stub:0.7.0'
	compile 'io.grpc:grpc-protobuf-nano:0.7.0'
	protobuf files('libs/protos.jar')
}

android {
	compileSdkVersion 23
	buildToolsVersion "21.1.2"

	defaultConfig {
		applicationId "com.addrobots.vehiclecontrol"
		minSdkVersion 21
		targetSdkVersion 23
		versionCode 1
		versionName "1.0"
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
//	sourceSets {
//		main {
//			proto {
//				srcDir 'src/main/protobuf'
//				include '**/*.proto'
//			}
//			java {
//				srcDirs 'src/main/java', 'generated/proto/debug/javanano'
//			}
//		}
//	}
}

protobuf {
	// Configure the protoc executable
	protoc {
		// Download from repositories
		artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:0.7.0'
		}
	}
	generateProtoTasks {
		all()*.builtins {
			javanano {
				// Options added to --javanano_out
				option 'java_multiple_files=false'
				option 'ignore_services=true'
			}
		}
		ofNonTest()*.plugins {
			grpc {
				// Options added to --grpc_out
				option 'nano=true'
			}
		}
	}
}

task printDeps(dependsOn: build) << {
	configurations.each { println it }
	sourceSets.each { println it.getCompileTaskName("proto") }
	sourceSets.each { println it.getCompileTaskName("java") }
	sourceSets.each { println it }
	println tasks['generateProto'].source
	println tasks['compileJava'].source
	println project.buildDir
	println project.buildDir.path
}